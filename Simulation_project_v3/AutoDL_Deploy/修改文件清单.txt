╔═══════════════════════════════════════════════════════════════╗
║           AutoDL并行校准 - 修改文件清单                      ║
╚═══════════════════════════════════════════════════════════════╝

【需要上传到AutoDL的核心文件（3个）】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. TESTS/test_calibration.py
   修改内容：
   - 添加Numba环境变量配置
   - NUMBA_NUM_THREADS=128
   - NUMBA_THREADING_LAYER=omp
   
2. CONFIG/calibration_config.yaml
   修改内容：
   - method: differential_evolution（核心！）
   - popsize: 32
   - workers: 32
   - 从串行改为32进程并行
   
3. MODULES/CALIBRATION/smm_calibrator.py
   修改内容：
   - 导入differential_evolution
   - 添加并行算法分支逻辑
   - 支持进程级并行优化

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【AutoDL_Deploy文件夹新增/保留的文件】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

核心脚本：
✓ force_parallel_run.sh          - 核心运行脚本
✓ autodl_setup.sh                - 环境初始化
✓ quick_test.sh                  - 快速测试
✓ monitor_script.sh              - 监控脚本
✓ email_notify.sh                - 通知脚本
✓ upload_to_autodl.ps1           - Windows上传脚本

文档：
✓ 最终部署方案.md               - 最新部署指南（核心）
✓ 并行优化方案.txt               - 并行原理说明
✓ AUTODL使用教程.md              - 详细使用教程
✓ AutoDL快速开始.txt             - 快速参考
✓ README_AUTODL.md               - AutoDL总览
✓ 监控指南.md                    - 监控详细指南
✓ 关于关机后监控-简明版.txt      - 监控简明版

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【已删除的过时文件】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✗ test_numba_parallel.py         - Numba并行测试（改用进程并行）
✗ run_calibration.sh             - 旧运行脚本（被force_parallel替代）
✗ 快速修复步骤.txt               - 针对Numba问题（已过时）
✗ upgrade_tbb.sh                 - TBB升级脚本（不需要了）
✗ test_all_backends.py           - 后端测试脚本（不需要了）
✗ 解决并行问题-操作指南.md       - 旧的并行方案（已过时）
✗ 娓呴櫎缂撳瓨鎸囧崡.txt         - 编码错误文件

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【核心改动原理】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

原方案（失败）：
  Nelder-Mead串行优化
  └── 每次评估1个参数点
      └── 单个MFG求解内部Numba并行
          └── 128核心大部分空闲 ❌

新方案（应该成功）：
  Differential Evolution并行优化
  └── 每代同时评估32个参数点
      └── 32个独立进程
          └── 每个进程运行完整MFG求解
              └── 充分利用128核心 ✅

预期加速：32倍
预期时间：7天 → 0.5-1天

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【快速部署命令】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 用WinSCP上传3个核心文件（见上）

2. SSH运行：
   cd ~/Simulation_project_v3
   bash AutoDL_Deploy/force_parallel_run.sh

3. 监控：
   htop
   # 应该看到30+个python进程！

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

